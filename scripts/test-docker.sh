#!/bin/bash

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}üê≥ Testando Docker Setup${NC}\n"

# Verifica se Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker n√£o est√° instalado${NC}"
    exit 1
fi

# Verifica se Docker Compose est√° instalado
if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose n√£o est√° instalado${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Docker e Docker Compose est√£o instalados${NC}\n"

# Verifica se .env existe
if [ ! -f .env ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Arquivo .env n√£o encontrado${NC}"
    echo -e "${YELLOW}Criando .env a partir de .env.sample...${NC}"
    cp .env.sample .env
    echo -e "${GREEN}‚úÖ Arquivo .env criado${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  Edite o arquivo .env com suas configura√ß√µes antes de continuar${NC}\n"
fi

# Build da imagem
echo -e "${GREEN}üì¶ Fazendo build da imagem...${NC}"
docker-compose build

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Build conclu√≠do com sucesso${NC}\n"
else
    echo -e "${RED}‚ùå Falha no build${NC}"
    exit 1
fi

# Inicia o container
echo -e "${GREEN}üöÄ Iniciando container...${NC}"
docker-compose up -d

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Container iniciado${NC}\n"
else
    echo -e "${RED}‚ùå Falha ao iniciar container${NC}"
    exit 1
fi

# Aguarda o container ficar healthy
echo -e "${YELLOW}‚è≥ Aguardando container ficar saud√°vel...${NC}"
sleep 10

# Testa o healthcheck
echo -e "\n${GREEN}üîç Testando endpoint /healthcheck...${NC}"
HEALTH_RESPONSE=$(curl -s -w "\n%{http_code}" http://localhost:3001/healthcheck)
HTTP_CODE=$(echo "$HEALTH_RESPONSE" | tail -n1)
RESPONSE_BODY=$(echo "$HEALTH_RESPONSE" | head -n-1)

if [ "$HTTP_CODE" = "200" ]; then
    echo -e "${GREEN}‚úÖ Healthcheck OK${NC}"
    echo -e "${GREEN}Response: ${RESPONSE_BODY}${NC}\n"
else
    echo -e "${RED}‚ùå Healthcheck falhou (HTTP ${HTTP_CODE})${NC}"
    echo -e "${RED}Response: ${RESPONSE_BODY}${NC}\n"
fi

# Mostra status do container
echo -e "${GREEN}üìä Status do container:${NC}"
docker-compose ps

# Mostra logs
echo -e "\n${GREEN}üìú √öltimas linhas do log:${NC}"
docker-compose logs --tail=20 app

echo -e "\n${GREEN}‚ú® Teste conclu√≠do!${NC}"
echo -e "${YELLOW}Para ver os logs em tempo real: docker-compose logs -f${NC}"
echo -e "${YELLOW}Para parar o container: docker-compose down${NC}\n"
